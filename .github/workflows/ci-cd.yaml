name: CI/CD Pipeline with Helm Deployments

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  EKS_CLUSTER: tlcit-eks-cluster

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: |
        pip install flake8 pytest
        flake8 .
        pytest --maxfail=1 --disable-warnings -q

  docker-build:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build & Push Images
      run: |
        services=(signal-core whale-tracer flow-monitor daily-report tlcit-launcher tlcit-backtester tlcit-neo4j-ingest tlcit-scheduler)
        for svc in "${services[@]}"; do
          docker build -t ${{ secrets.DOCKERHUB_USER }}/$svc:latest -f $svc/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USER }}/$svc:latest
        done

  deploy-staging:
    needs: docker-build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - uses: actions/checkout@v3
    - uses: azure/setup-kubectl@v3
    - uses: azure/setup-helm@v3
    - name: Configure Kubeconfig
      run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER
    - name: Deploy Helm charts to Staging
      run: |
        helm upgrade --install kafka-cluster charts/kafka-cluster           --namespace staging --create-namespace
        helm upgrade --install tlcit-neo4j charts/neo4j           --namespace staging           --set auth.password=${{ secrets.NEO4J_PASSWORD }}

  deploy-production:
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://tlcit.yourdomain.com
    steps:
    - uses: actions/checkout@v3
    - uses: azure/setup-kubectl@v3
    - uses: azure/setup-helm@v3
    - name: Configure Kubeconfig
      run: aws eks update-kubeconfig --region $AWS_REGION --...
